{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  // ==============================
  // Math Modes
  "inline math": {
    "scope": "latex",
    "prefix": "imath",
    "body": [
      "$ $0 $"
    ],
  },
  "inline math - markdown": {
    "scope": "markdown",
    "prefix": "imath",
    "body": [
      "$$0$"
    ],
  },
  "display math": {
    "scope": "latex",
    "prefix": "dmath",
    "body": [
      "\\[ $0 \\]",
    ],
  },
  "display math - markdown": {
    "scope": "markdown",
    "prefix": "dmath",
    "body": [
      "$$ $0 $$",
    ],
  },
  "equation": {
    "scope": "latex",
    "prefix": "eqn",
    "body": [
      "\\begin{equation} \\label{eq:${1:label}}",
      "    $2",
      "\\end{equation}",
      "$0"
    ],
  },
  "align": {
    "scope": "latex",
    "prefix": "align",
    "body": [
      "\\begin{align*}",
      "    $0 &= \\\\\\",
      "\\end{align*}"
    ]
  },
  // =============================
  // Insert new parts to assignment questions
  "newpart": {
    "scope": "latex",
    "prefix": "newpart",
    "body": [
      "",
      "",
      "",
      "",
      "\\bigskip",
      "\\bigskip",
      "\\noindent",
      "$0"
    ]
  },
  "noindent": {
    "scope": "latex",
    "prefix": "noindent",
    "body": [
      "",
      "\\smallskip \\noindent",
      "$0"
    ]
  },
  // =============================
  // Brackets - should be surrounded by \left \right
  "integral result": {
    "scope": "latex",
    "prefix": "intresult",
    "body": [
      "\\left[ $0 \\right]_{}^{}"
    ],
  },
  "brackets": {
    "scope": "latex",
    "prefix": "bracket",
    "body": [
      "\\left( $0 \\right)"
    ],
  },
  "square brackets": {
    "scope": "latex",
    "prefix": "squarebracket",
    "body": [
      "\\left[ $0 \\right]"
    ],
  },
  "curly brackets": {
    "scope": "latex",
    "prefix": "curlybracket",
    "body": [
      "\\left\\{ $0 \\right\\\\}"
    ],
  },
  "angle brackets": {
    "scope": "latex",
    "prefix": "anglebracket",
    "body": [
      "\\left\\langle $0 \\right\\rangle"
    ],
  },
  "absolute value": {
    "scope": "latex",
    "prefix": "abs",
    "body": "\\left| $0 \\right|",
  },
  "norm": {
    "scope": "latex",
    "prefix": "norm",
    "body": "\\left\\| $0 \\right\\|",
  },
  "floor": {
    "scope": "latex",
    "prefix": "floor",
    "body": "\\left\\lfloor $0 \\right\\rfloor",
  },
  "ceil": {
    "scope": "latex",
    "prefix": "ceil",
    "body": "\\left\\lceil $0 \\right\\rceil",
  },
  // ============================
  // Math
  // Don't put a space at the end
  "figure": {
    "scope": "latex",
    "prefix": "figure",
    "body": [
      "\\begin{figure}[h]",
      "\\centering",
      "\\includegraphics[width=${1:1.0}\\linewidth]{${2:filename}}",
      "\\caption{$3}",
      "\\label{fig:${4:label}}",
      "\\end{figure}",
      "$0"
    ]
  },
  "ref": {
    "scope": "latex",
    "prefix": "ref",
    "body": [
      "\\ref{$0}"
    ],
  },
  "fraction": {
    "scope": "latex",
    "prefix": "frac",
    "body": "\\frac{$0}{}",
  },
  "binom": {
    "scope": "latex",
    "prefix": "binom",
    "body": "\\binom{$0}{}",
  },
  "summation": {
    "scope": "latex",
    "prefix": "sum",
    "body": "\\sum_{$0}^{}",
  },
  "integral": {
    "scope": "latex",
    "prefix": "int",
    "body": "\\int_{$0}^{} \\,d",
  },
  "matrix": {
    "scope": "latex",
    "prefix": "matrix",
    "body": [
      "\\begin{bmatrix}",
      "    $0 & \\\\\\",
      "\\end{bmatrix}"
    ],
  },
  "augmented matrix": {
    "scope": "latex",
    "prefix": "augmatrix",
    "body": [
      "\\left[",
      "\\begin{array}{ccc|c}",
      "    $0 & & & \\\\\\",
      "\\end{array}",
      "\\right]"
    ],
  },
  "times": {
    "scope": "latex",
    "prefix": "times",
    "body": "\\times",
  },
  "dot": {
    "scope": "latex",
    "prefix": "dot",
    "body": "\\cdot",
  },
  "mid": {
    "scope": "latex",
    "prefix": "mid",
    "body": [
      "\\mid"
    ],
  },
  "midbig": {
    "scope": "latex",
    "prefix": "midbig",
    "body": [
      "\\,\\Big|\\,"
    ],
  },
  "sqrt": {
    "scope": "latex",
    "prefix": "sqrt",
    "body": "\\sqrt{$0}",
  },
  "sin": {
    "scope": "latex",
    "prefix": "sin",
    "body": "\\sin",
  },
  "cos": {
    "scope": "latex",
    "prefix": "cos",
    "body": "\\cos",
  },
  "tan": {
    "scope": "latex",
    "prefix": "tan",
    "body": "\\tan",
  },
  "log": {
    "scope": "latex",
    "prefix": "log",
    "body": "\\log",
  },
  "pi": {
    "scope": "latex",
    "prefix": "pi",
    "body": "\\pi",
  },
  "leq": {
    "scope": "latex",
    "prefix": "leq",
    "body": "\\leq",
  },
  "geq": {
    "scope": "latex",
    "prefix": "geq",
    "body": "\\geq",
  },
  "to": {
    "scope": "latex",
    "prefix": "to",
    "body": "\\to",
  },
  "infinity": {
    "scope": "latex",
    "prefix": "infty",
    "body": "\\infty",
  },
  "greek letter theta": {
    "scope": "latex",
    "prefix": "theta",
    "body": "\\theta",
  },
  "greek letter lambda": {
    "scope": "latex",
    "prefix": "lambda",
    "body": "\\lambda",
  },
  "greek letter alpha": {
    "scope": "latex",
    "prefix": "alpha",
    "body": "\\alpha",
  },
  "greek letter beta": {
    "scope": "latex",
    "prefix": "beta",
    "body": "\\beta",
  },
  "greek letter gamma": {
    "scope": "latex",
    "prefix": "gamma",
    "body": "\\gamma",
  },
  "limit": {
    "scope": "latex",
    "prefix": "lim",
    "body": "\\lim_{$0 \\to }",
  },
  "derivative": {
    "scope": "latex",
    "prefix": "derivative",
    "body": "\\frac{d}{d$0}",
  },
  "partial derivative": {
    "scope": "latex",
    "prefix": "partial",
    "body": "\\frac{\\partial}{\\partial $0}",
  },
  "cases": {
    "scope": "latex",
    "prefix": "cases",
    "body": [
      "\\begin{cases}",
      "    ${1:expression_1} & \\quad \\text{if } ${2:condition_1} \\\\\\",
      "    ${3:expression_2} & \\quad \\text{otherwise}",
      "\\end{cases}",
      "$0"
    ],
  },
  "bold text": {
    "scope": "latex",
    "prefix": "bold",
    "body": "\\textbf{$0}",
  },
  "text": {
    "scope": "latex",
    "prefix": "text",
    "body": "\\text{$0}",
  },
  "complex": {
    "scope": "latex",
    "prefix": "complex",
    "body": "\\mathbb{C}",
  },
  "rational": {
    "scope": "latex",
    "prefix": "rational",
    "body": "\\mathbb{Q}",
  },
  "integers": {
    "scope": "latex",
    "prefix": "integers",
    "body": "\\mathbb{Z}",
  },
  "real": {
    "scope": "latex",
    "prefix": "real",
    "body": "\\mathbb{R}",
  },
  "natural": {
    "scope": "latex",
    "prefix": "natural",
    "body": "\\mathbb{N}",
  },
  // ======================
  // Pseudocode
  // Uses algorithm2e package
  "algorithm": {
    "scope": "latex",
    "prefix": "algorithm",
    "body": [
      "\\begin{algorithm}",
      "\\DontPrintSemicolon",
      "\\SetKwComment{Comment}{// }{}",
      "\\caption{$0}",
      "",
      "\\KwIn{$ $}",
      "\\KwOut{}",
      "",
      "\\end{algorithm}"
    ]
  },
  "input": {
    "scope": "latex",
    "prefix": "input",
    "body": "\\KwIn{$ $0 $}",
  },
  "comment": {
    "scope": "latex",
    "prefix": "comment",
    "body": "\\Comment*[h]{$0}",
  },
  "statement": {
    "scope": "latex",
    "prefix": "statement",
    "body": "$ $0 $ \\;",
  },
  "gets": {
    "scope": "latex",
    "prefix": "gets",
    "body": "\\gets",
  },
  "if": {
    "scope": "latex",
    "prefix": "if",
    "body": [
      "\\If {$ $0 $} {",
      "    ",
      "}"
    ]
  },
  "else If": {
    "scope": "latex",
    "prefix": "elseif",
    "body": [
      "\\ElseIf {$ $0 $} {",
      "    ",
      "}"
    ]
  },
  "else": {
    "scope": "latex",
    "prefix": "else",
    "body": [
      "\\Else {",
      "    $0",
      "}"
    ]
  },
  "for": {
    "scope": "latex",
    "prefix": "for",
    "body": [
      "\\For {$ $0 $ \\KwTo $ $} {",
      "    ",
      "}"
    ]
  },
  "forall": {
    "scope": "latex",
    "prefix": "forall",
    "body": [
      "\\ForAll {$ $0 $} {",
      "    ",
      "}"
    ]
  },
  "while": {
    "scope": "latex",
    "prefix": "while",
    "body": [
      "\\While {$ $0 $} {",
      "    ",
      "}"
    ]
  },
  "return": {
    "scope": "latex",
    "prefix": "return",
    "body": "\\Return{$ $0 $}\\;",
  },
}
